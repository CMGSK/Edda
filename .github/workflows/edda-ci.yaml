name: Edda CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  check:
    name: Check, format and lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libfontconfig1-dev pkg-config
        shell: bash

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install pkg-config fontconfig
        shell: bash

      - name: Install system dependencies (Windows)
        if: runner.os == 'Windows'
        run: choco install pkgconfiglite --no-progress
        shell: powershell # choco often works better with powershell

      - name: Cache Cargo registry and git DB
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-git-

      - name: Cache Cargo target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-check-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-check-

      - name: Formatting
        run: cargo fmt --all --check

      - name: Linting
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Check compilation
        run: cargo check --all-targets --all-features

  test:
    name: Test (${{ matrix.rust }} on ${{ matrix.os }})
    needs: check
    if: github.event_name == 'pull_request'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable, beta, nightly]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust (${{ matrix.rust }})
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libfontconfig1-dev pkg-config
        shell: bash

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install pkg-config fontconfig
        shell: bash

      - name: Install system dependencies (Windows)
        if: runner.os == 'Windows'
        run: choco install pkgconfiglite --no-progress
        shell: powershell

      - name: Cache Cargo registry and git DB
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-git-

      - name: Cache Cargo target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-test-${{ matrix.rust || 'stable' }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-test-${{ matrix.rust || 'stable' }}-
            ${{ runner.os }}-cargo-target- # Fallback slightly broader key

      - name: Run tests
        run: cargo test --release --all-targets --all-features

  build:
    name: Build (${{ matrix.os }})
    needs: check
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libfontconfig1-dev pkg-config
        shell: bash

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install pkg-config fontconfig
        shell: bash

      - name: Install system dependencies (Windows)
        if: runner.os == 'Windows'
        run: choco install pkgconfiglite --no-progress
        shell: powershell

      - name: Cache Cargo registry and git DB
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-git-

      - name: Cache Cargo target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-build-stable-${{ hashFiles('**/Cargo.lock') }} # Use stable for build job
          restore-keys: |
            ${{ runner.os }}-cargo-target-build-stable-
            ${{ runner.os }}-cargo-target- # Fallback slightly broader key

      - name: Build
        run: cargo build --release --all-targets --all-features